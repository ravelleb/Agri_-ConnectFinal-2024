@model IEnumerable<Agri__ConnectFinal.Models.Grocery>

<div class="my-2">
    <form class="row row-cols-lg-auto g-3 align-items-center" method="get" action="/Home/Index">
        <div class="col-12">
            <label class="visually-hidden" for="inlineFormSelectPref">Category</label>
            <select class="form-select" id="CategoryId" name="categoryId">
                <option selected>Filter</option>
                <option value="1">Fruit</option>
                <option value="2">Vegetable</option>
                <option value="3">Meat</option>
            </select>
        </div>
        <div class="col-12">
            <label class="visually-hidden" for="inlineFormInputGroupUsername">Search by type</label>
            <div class="input-group">
                <input type="text" class="form-control" id="sterm" name="sTerm" placeholder="Search by type">
            </div>
        </div>
        <div class="col-12">
            <button type="submit" class="btn btn-primary">Search</button>
            <a href="/Home/Index" class="btn btn-dark">Reset</a>
        </div>
    </form>
</div>

<div class="w-100 mt-4 d-flex flex-wrap">
    @foreach (var grocery in Model)
    {
        <div class="card mx-3 mb-4" style="width: 14rem;">
            @if (string.IsNullOrEmpty(grocery.Image))
            {
                <img style="width:100%;height:180px" src="/images/no-image.jpg" class="card-img-top" alt="No image available">
            }
            else
            {
                <img style="width:100%;height:180px" src="@Url.Content("/images/" + grocery.Image)" class="card-img-top" alt="@grocery.GroceryName">
            }
            <div class="card-body">
                <h5 class="card-title">@grocery.GroceryName</h5>
                <p class="card-text">
                    <strong>Product:</strong> @grocery.VegetableName <br>
                    <strong>Seller:</strong> @grocery.SellerName <br>
                    <strong>Price:</strong> @grocery.Price
                </p>
                <button type="button" onclick="add(@grocery.Id)" class="btn btn-primary">ADD TO CART</button>
            </div>
        </div>
    }
</div>

@section Scripts
{
    <script>
        async function add(groceryId) {
            try {
                console.log("Adding item to cart:", groceryId);
                var response = await fetch(`/Cart/AddItem?groceryId=${groceryId}`, {
                    method: 'POST'
                });
                var result = await response.json();
                if (response.ok && result.success) {
                    console.log("Item added to cart. New cart count:", result.cartCount);
                    var cartCountEl = document.getElementById("cartCount");
                    if (cartCountEl) {
                        cartCountEl.innerHTML = result.cartCount;
                    }
                } else {
                    console.error('Failed to add item to cart:', result.message);
                    alert('Failed to add item to cart: ' + result.message); // Display error message
                }
            } catch (err) {
                console.error('Error adding item to cart:', err);
                alert('Error adding item to cart: ' + err.message); // Display error message
            }
        }

        async function loadCartCount() {
            try {
                console.log("Loading cart count...");
                var response = await fetch('/Cart/GetTotalItemInCart');
                var result = await response.json();
                if (response.ok && result.success) {
                    console.log("Cart count loaded:", result.cartItem);
                    var cartCountEl = document.getElementById("cartCount");
                    if (cartCountEl) {
                        cartCountEl.innerHTML = result.cartItem;
                    }
                } else {
                    console.error('Failed to load cart count:', result.message);
                    alert('Failed to load cart count: ' + result.message); // Display error message
                }
            } catch (err) {
                console.error('Error loading cart count:', err);
                alert('Error loading cart count: ' + err.message); // Display error message
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            loadCartCount();
        });
    </script>
}
